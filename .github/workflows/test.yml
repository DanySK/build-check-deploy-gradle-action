name: CI/CD Process

on:
  push:
    branches-ignore:
      - 'renovate/**'
  pull_request:
  workflow_dispatch:

jobs:
  select-tests:
    runs-on: ubuntu-22.04
    concurrency:
      group: ${{ github.workflow }}-select-tests-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    outputs:
      tests: ${{ steps.trick.outputs.tests }}
    steps:
      - name: Trick Renovate
        id: trick
        shell: bash
        run: |
          USES=$(cat <<TRICK_RENOVATE
          - uses: DanySK/Template-for-Gradle-Plugins@0bf79842aeac4dc938ddfabd877460a51fb4b88d
          - uses: DanySK/Template-for-Kotlin-Multiplatform-Projects@0.1.22
          TRICK_RENOVATE
          )
          export USES="$USES"
          ruby -e 'puts "tests=#{ENV["USES"].lines.map { |line| /^-\s+uses:\s+([^\s]+\/[^\s]+)@(.*)\s*$/.match(line) }.map { |match| [match[1], match[2]] }}"' >> $GITHUB_OUTPUT
  test:
    needs:
      - select-tests
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, macos-12, ubuntu-22.04 ]
        test: ${{ fromJson(needs.select-tests.outputs.tests) }}
    runs-on: ${{ matrix.os }}
    concurrency:
      group: ${{ github.workflow }}-test-${{ matrix.os }}-${{ matrix.test[0] }}-${{ matrix.test[1] }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
        with:
          path: 'action'
      - name: Checkout test repo
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: ${{ matrix.test[0] }}
          path: 'target'
          ref: ${{ matrix.test[1] }}
      - uses: ./action
        with:
          build-command: ./gradlew tasks
          check-command: |
            for x in 1 2 3; do
              echo $x
            done
          working-directory: target
          should-run-codecov: false
          clean-command: ./gradlew clean
      - uses: ./action
        with:
          working-directory: target
          should-run-codecov: false
  release:
    if: github.event_name == 'push'
    needs:
      - test
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          npx semantic-release
  success:
    runs-on: ubuntu-22.04
    needs:
      - select-tests
      - test
      - release
    if: >-
      always() && (
        contains(join(needs.*.result, ','), 'failure')
        || !contains(join(needs.*.result, ','), 'cancelled')
      )
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
