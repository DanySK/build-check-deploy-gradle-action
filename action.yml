name: Build and delivery a Gradle project
description: Build and delivery a Gradle project

inputs:
  build-command:
    description: 'The command executed in the build phase'
    default: './gradlew assemble --parallel'
    required: false
  check-command:
    description: 'The command executed in the check phase'
    default: './gradlew check --parallel'
    required: false
  clean-command:
    description: 'The command executed in the final clean phase'
    default: 'true'
    required: false
  deploy-command:
    description: 'The condition triggering a deploy run'
    default: "./gradlew publish --parallel"
    required: false
  gradle-termination-command:
    description: 'The command to terminate the gradle wrapper gracefully'
    default: "./gradlew --stop"
    required: false
  java-distribution:
    description: 'The Java distrbutor to use'
    default: "temurin"
    required: false
  java-version:
    description: 'The Java version to use'
    default: "17"
    required: false
  should-run-codecov:
    description: 'True if the action should send coverage results to codecov.io'
    default: true
    required: false
  should-deploy:
    description: 'True if the deploy operation should be executed'
    default: false
    required: false
  maven-central-username:
    description: 'Username for Maven Central'
    default: 'danysk'
    required: false
  custom-secret-0:
    description: 'A custom secret that will be exposed in the deployment step as the environment variable CUSTOM_SECRET_0'
    default: ''
    required: false
  custom-secret-1:
    description: 'A custom secret that will be exposed in the deployment step as the environment variable CUSTOM_SECRET_1'
    default: ''
    required: false
  custom-secret-2:
    description: 'A custom secret that will be exposed in the deployment step as the environment variable CUSTOM_SECRET_2'
    default: ''
    required: false
  custom-secret-3:
    description: 'A custom secret that will be exposed in the deployment step as the environment variable CUSTOM_SECRET_3'
    default: ''
    required: false
  custom-secret-4:
    description: 'A custom secret that will be exposed in the deployment step as the environment variable CUSTOM_SECRET_4'
    default: ''
    required: false
  github-token:
    required: false
  gradle-publish-secret:
    required: false
  gradle-publish-key:
    required: false
  maven-central-password:
    required: false
  signing-key:
    required: false
  signing-password:
    required: false
  working-directory:
    description: 'Location where the repository should will be cloned'
    default: '.'
    required: false

runs:
  using: composite
  steps:
    - uses: actions/setup-java@v2
      with:
        distribution: ${{ inputs.java-distribution }}
        java-version: ${{ inputs.java-version }}
        server-id: ossrh
        server-username: ${{ inputs.maven-central-username }}
        server-password: $ {{ inputs.maven-central-password }}
        gpg-private-key: ${{ inputs.signing-key }}
        gpg-passphrase: ${{ inputs.signing-password }}
    - name: Configure the Windows Pagefile
      if: ${{ runner.os == 'Windows' }}
      uses: al-cheb/configure-pagefile-action@v1.2
    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.gradle/jdks
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        ${{ inputs.build-command }}
    - name: Check
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        ${{ inputs.check-command }}
    - name: CodeCov
      if: inputs.should-run-codecov == 'true'
      uses: codecov/codecov-action@v2
    - name: Deploy
      if: inputs.should-deploy == 'true'
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      env:
        CUSTOM_SECRET_0: ${{ inputs.custom-secret-0 }}
        CUSTOM_SECRET_1: ${{ inputs.custom-secret-1 }}
        CUSTOM_SECRET_2: ${{ inputs.custom-secret-2 }}
        CUSTOM_SECRET_3: ${{ inputs.custom-secret-3 }}
        CUSTOM_SECRET_4: ${{ inputs.custom-secret-4 }}
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GRADLE_PUBLISH_SECRET: ${{ inputs.gradle-publish-secret }}
        GRADLE_PUBLISH_KEY: ${{ inputs.gradle-publish-key }}
        MAVEN_CENTRAL_PASSWORD: ${{ inputs.maven-central-password }}
        MAVEN_CENTRAL_USERNAME: ${{ inputs.maven-central-username }}
        ORG_GRADLE_PROJECT_signingKey: ${{ inputs.signing-key }}
        ORG_GRADLE_PROJECT_signingPassword: ${{ inputs.signing-password }}
        SIGNING_PASSWORD: ${{ inputs.signing-password }}
      run: |
        ${{ inputs.deploy-command }}
    - name: Cleanup
      working-directory: ${{ inputs.working-directory }}
      shell: bash
      run: |
        ${{ inputs.clean-command }}
    - name: Turn off the Gradle Daemon
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: ./gradlew --stop
    - name: Force-kill the remaining Gradle Daemons on Windows
      if: ${{ runner.os == 'Windows' }}
      shell: powershell
      run: |
        WMIC PROCESS where "Name like 'java%' AND CommandLine like '%GradleDaemon%'" Call Terminate
    - name: Cleanup the Gradle cache
      if: ${{ runner.os != 'Windows' }}
      shell: bash
      run: |
        rm -f ~/.gradle/caches/modules-2/modules-2.lock
        rm -f ~/.gradle/caches/modules-2/gc.properties
        rm -f ~/.gradle/jdks/*.lock
        rm -rf ~/.gradle/jdks/*/
    - name: Force the Gradle cleanup on Windows
      if: ${{ runner.os == 'Windows' }}
      shell: powershell
      run: |
        $files = "c:\Users\runneradmin\.gradle\caches\modules-2\modules-2.lock","c:\Users\runneradmin\.gradle\caches\modules-2\gc.properties"
        foreach ($file in $files) {
          if (Test-Path $file = True) {
            Remove-Item -Force $file
          }
        }
        Remove-Item -Force c:\Users\runneradmin\.gradle\jdks\*.lock
